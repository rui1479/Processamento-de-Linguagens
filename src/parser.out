Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> instructions
Rule 2     instructions -> instructions instruction
Rule 3     instructions -> instruction
Rule 4     instructions -> instructions instruction WORD
Rule 5     instructions -> instructions instruction WORD instruction
Rule 6     instructions -> FUNCTION_DEFINITION
Rule 7     instruction -> instructions WORD instructions
Rule 8     FUNCTION_DEFINITION -> CONDICIONAL
Rule 9     instruction -> NUMBER
Rule 10    instruction -> operator
Rule 11    instruction -> CARACTER
Rule 12    operator -> PLUS
Rule 13    operator -> MINUS
Rule 14    operator -> TIMES
Rule 15    operator -> DIVIDE
Rule 16    operator -> SUP
Rule 17    operator -> INF
Rule 18    operator -> EQUALS
Rule 19    instruction -> PRINT
Rule 20    PRINT -> DOT
Rule 21    PRINT -> NUMBER DOT
Rule 22    PRINT -> DOT QUOTE words QUOTE
Rule 23    PRINT -> NUMBER EMIT
Rule 24    FUNCTION_DEFINITION -> COLON WORD LPAREN FUNCTION_PARAMS RPAREN FUNCTION_BODY SEMICOLON
Rule 25    FUNCTION_PARAMS -> PARAMS FUNCTION_PARAMS
Rule 26    FUNCTION_PARAMS -> PARAMS MIDFUNC WORD
Rule 27    PARAMS -> ID
Rule 28    PARAMS -> MIDFUNC
Rule 29    PARAMS -> WORD
Rule 30    FUNCTION_BODY -> instructions
Rule 31    FUNCTION_BODY -> instruction
Rule 32    FUNCTION_DEFINITION -> COLON WORD PRINTFUNC SEMICOLON
Rule 33    PRINTFUNC -> DOT QUOTE words QUOTE
Rule 34    PRINTFUNC -> DOT QUOTE words QUOTE CARACTER
Rule 35    PRINTFUNC -> QUOTE words QUOTE
Rule 36    words -> words WORD
Rule 37    words -> words WORD sinais
Rule 38    words -> WORD
Rule 39    instructions -> FUNCCALL
Rule 40    FUNCCALL -> WORD
Rule 41    sinais -> EXCLAMATION
Rule 42    sinais -> INTERROGATION
Rule 43    FUNCTION_DEFINITION -> COLON funcword SEMICOLON
Rule 44    funcword -> WORD WORD
Rule 45    CARACTER -> CR
Rule 46    CARACTER -> KEY
Rule 47    CONDICIONAL -> COLON WORD operator IF part ELSE part THEN SEMICOLON
Rule 48    part -> DOT QUOTE words QUOTE
Rule 49    part -> QUOTE words QUOTE

Terminals, with rules where they appear

COLON                : 24 32 43 47
CR                   : 45
DIVIDE               : 15
DOT                  : 20 21 22 33 34 48
ELSE                 : 47
EMIT                 : 23
EQUALS               : 18
EXCLAMATION          : 41
ID                   : 27
IF                   : 47
INF                  : 17
INTERROGATION        : 42
KEY                  : 46
LPAREN               : 24
MIDFUNC              : 26 28
MINUS                : 13
NUMBER               : 9 21 23
PLUS                 : 12
QUOTE                : 22 22 33 33 34 34 35 35 48 48 49 49
RPAREN               : 24
SEMICOLON            : 24 32 43 47
SUP                  : 16
THEN                 : 47
TIMES                : 14
WORD                 : 4 5 7 24 26 29 32 36 37 38 40 44 44 47
error                : 

Nonterminals, with rules where they appear

CARACTER             : 11 34
CONDICIONAL          : 8
FUNCCALL             : 39
FUNCTION_BODY        : 24
FUNCTION_DEFINITION  : 6
FUNCTION_PARAMS      : 24 25
PARAMS               : 25 26
PRINT                : 19
PRINTFUNC            : 32
funcword             : 43
instruction          : 2 3 4 5 5 31
instructions         : 1 2 4 5 7 7 30
operator             : 10 47
part                 : 47 47
sinais               : 37
statement            : 0
words                : 22 33 34 35 36 37 48 49

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . instructions
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (4) instructions -> . instructions instruction WORD
    (5) instructions -> . instructions instruction WORD instruction
    (6) instructions -> . FUNCTION_DEFINITION
    (39) instructions -> . FUNCCALL
    (7) instruction -> . instructions WORD instructions
    (9) instruction -> . NUMBER
    (10) instruction -> . operator
    (11) instruction -> . CARACTER
    (19) instruction -> . PRINT
    (8) FUNCTION_DEFINITION -> . CONDICIONAL
    (24) FUNCTION_DEFINITION -> . COLON WORD LPAREN FUNCTION_PARAMS RPAREN FUNCTION_BODY SEMICOLON
    (32) FUNCTION_DEFINITION -> . COLON WORD PRINTFUNC SEMICOLON
    (43) FUNCTION_DEFINITION -> . COLON funcword SEMICOLON
    (40) FUNCCALL -> . WORD
    (12) operator -> . PLUS
    (13) operator -> . MINUS
    (14) operator -> . TIMES
    (15) operator -> . DIVIDE
    (16) operator -> . SUP
    (17) operator -> . INF
    (18) operator -> . EQUALS
    (45) CARACTER -> . CR
    (46) CARACTER -> . KEY
    (20) PRINT -> . DOT
    (21) PRINT -> . NUMBER DOT
    (22) PRINT -> . DOT QUOTE words QUOTE
    (23) PRINT -> . NUMBER EMIT
    (47) CONDICIONAL -> . COLON WORD operator IF part ELSE part THEN SEMICOLON

    NUMBER          shift and go to state 7
    COLON           shift and go to state 12
    WORD            shift and go to state 4
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    TIMES           shift and go to state 15
    DIVIDE          shift and go to state 16
    SUP             shift and go to state 17
    INF             shift and go to state 18
    EQUALS          shift and go to state 19
    CR              shift and go to state 20
    KEY             shift and go to state 21
    DOT             shift and go to state 22

    statement                      shift and go to state 1
    instructions                   shift and go to state 2
    instruction                    shift and go to state 3
    FUNCTION_DEFINITION            shift and go to state 5
    FUNCCALL                       shift and go to state 6
    operator                       shift and go to state 8
    CARACTER                       shift and go to state 9
    PRINT                          shift and go to state 10
    CONDICIONAL                    shift and go to state 11

state 1

    (0) S' -> statement .



state 2

    (1) statement -> instructions .
    (2) instructions -> instructions . instruction
    (4) instructions -> instructions . instruction WORD
    (5) instructions -> instructions . instruction WORD instruction
    (7) instruction -> instructions . WORD instructions
    (7) instruction -> . instructions WORD instructions
    (9) instruction -> . NUMBER
    (10) instruction -> . operator
    (11) instruction -> . CARACTER
    (19) instruction -> . PRINT
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (4) instructions -> . instructions instruction WORD
    (5) instructions -> . instructions instruction WORD instruction
    (6) instructions -> . FUNCTION_DEFINITION
    (39) instructions -> . FUNCCALL
    (12) operator -> . PLUS
    (13) operator -> . MINUS
    (14) operator -> . TIMES
    (15) operator -> . DIVIDE
    (16) operator -> . SUP
    (17) operator -> . INF
    (18) operator -> . EQUALS
    (45) CARACTER -> . CR
    (46) CARACTER -> . KEY
    (20) PRINT -> . DOT
    (21) PRINT -> . NUMBER DOT
    (22) PRINT -> . DOT QUOTE words QUOTE
    (23) PRINT -> . NUMBER EMIT
    (8) FUNCTION_DEFINITION -> . CONDICIONAL
    (24) FUNCTION_DEFINITION -> . COLON WORD LPAREN FUNCTION_PARAMS RPAREN FUNCTION_BODY SEMICOLON
    (32) FUNCTION_DEFINITION -> . COLON WORD PRINTFUNC SEMICOLON
    (43) FUNCTION_DEFINITION -> . COLON funcword SEMICOLON
    (40) FUNCCALL -> . WORD
    (47) CONDICIONAL -> . COLON WORD operator IF part ELSE part THEN SEMICOLON

    $end            reduce using rule 1 (statement -> instructions .)
    WORD            shift and go to state 25
    NUMBER          shift and go to state 7
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    TIMES           shift and go to state 15
    DIVIDE          shift and go to state 16
    SUP             shift and go to state 17
    INF             shift and go to state 18
    EQUALS          shift and go to state 19
    CR              shift and go to state 20
    KEY             shift and go to state 21
    DOT             shift and go to state 22
    COLON           shift and go to state 12

    instructions                   shift and go to state 23
    instruction                    shift and go to state 24
    operator                       shift and go to state 8
    CARACTER                       shift and go to state 9
    PRINT                          shift and go to state 10
    FUNCTION_DEFINITION            shift and go to state 5
    FUNCCALL                       shift and go to state 6
    CONDICIONAL                    shift and go to state 11

state 3

    (3) instructions -> instruction .

    WORD            reduce using rule 3 (instructions -> instruction .)
    NUMBER          reduce using rule 3 (instructions -> instruction .)
    PLUS            reduce using rule 3 (instructions -> instruction .)
    MINUS           reduce using rule 3 (instructions -> instruction .)
    TIMES           reduce using rule 3 (instructions -> instruction .)
    DIVIDE          reduce using rule 3 (instructions -> instruction .)
    SUP             reduce using rule 3 (instructions -> instruction .)
    INF             reduce using rule 3 (instructions -> instruction .)
    EQUALS          reduce using rule 3 (instructions -> instruction .)
    CR              reduce using rule 3 (instructions -> instruction .)
    KEY             reduce using rule 3 (instructions -> instruction .)
    DOT             reduce using rule 3 (instructions -> instruction .)
    COLON           reduce using rule 3 (instructions -> instruction .)
    $end            reduce using rule 3 (instructions -> instruction .)
    SEMICOLON       reduce using rule 3 (instructions -> instruction .)


state 4

    (40) FUNCCALL -> WORD .

    WORD            reduce using rule 40 (FUNCCALL -> WORD .)
    NUMBER          reduce using rule 40 (FUNCCALL -> WORD .)
    PLUS            reduce using rule 40 (FUNCCALL -> WORD .)
    MINUS           reduce using rule 40 (FUNCCALL -> WORD .)
    TIMES           reduce using rule 40 (FUNCCALL -> WORD .)
    DIVIDE          reduce using rule 40 (FUNCCALL -> WORD .)
    SUP             reduce using rule 40 (FUNCCALL -> WORD .)
    INF             reduce using rule 40 (FUNCCALL -> WORD .)
    EQUALS          reduce using rule 40 (FUNCCALL -> WORD .)
    CR              reduce using rule 40 (FUNCCALL -> WORD .)
    KEY             reduce using rule 40 (FUNCCALL -> WORD .)
    DOT             reduce using rule 40 (FUNCCALL -> WORD .)
    COLON           reduce using rule 40 (FUNCCALL -> WORD .)
    $end            reduce using rule 40 (FUNCCALL -> WORD .)
    SEMICOLON       reduce using rule 40 (FUNCCALL -> WORD .)


state 5

    (6) instructions -> FUNCTION_DEFINITION .

    WORD            reduce using rule 6 (instructions -> FUNCTION_DEFINITION .)
    NUMBER          reduce using rule 6 (instructions -> FUNCTION_DEFINITION .)
    PLUS            reduce using rule 6 (instructions -> FUNCTION_DEFINITION .)
    MINUS           reduce using rule 6 (instructions -> FUNCTION_DEFINITION .)
    TIMES           reduce using rule 6 (instructions -> FUNCTION_DEFINITION .)
    DIVIDE          reduce using rule 6 (instructions -> FUNCTION_DEFINITION .)
    SUP             reduce using rule 6 (instructions -> FUNCTION_DEFINITION .)
    INF             reduce using rule 6 (instructions -> FUNCTION_DEFINITION .)
    EQUALS          reduce using rule 6 (instructions -> FUNCTION_DEFINITION .)
    CR              reduce using rule 6 (instructions -> FUNCTION_DEFINITION .)
    KEY             reduce using rule 6 (instructions -> FUNCTION_DEFINITION .)
    DOT             reduce using rule 6 (instructions -> FUNCTION_DEFINITION .)
    COLON           reduce using rule 6 (instructions -> FUNCTION_DEFINITION .)
    $end            reduce using rule 6 (instructions -> FUNCTION_DEFINITION .)
    SEMICOLON       reduce using rule 6 (instructions -> FUNCTION_DEFINITION .)


state 6

    (39) instructions -> FUNCCALL .

    WORD            reduce using rule 39 (instructions -> FUNCCALL .)
    NUMBER          reduce using rule 39 (instructions -> FUNCCALL .)
    PLUS            reduce using rule 39 (instructions -> FUNCCALL .)
    MINUS           reduce using rule 39 (instructions -> FUNCCALL .)
    TIMES           reduce using rule 39 (instructions -> FUNCCALL .)
    DIVIDE          reduce using rule 39 (instructions -> FUNCCALL .)
    SUP             reduce using rule 39 (instructions -> FUNCCALL .)
    INF             reduce using rule 39 (instructions -> FUNCCALL .)
    EQUALS          reduce using rule 39 (instructions -> FUNCCALL .)
    CR              reduce using rule 39 (instructions -> FUNCCALL .)
    KEY             reduce using rule 39 (instructions -> FUNCCALL .)
    DOT             reduce using rule 39 (instructions -> FUNCCALL .)
    COLON           reduce using rule 39 (instructions -> FUNCCALL .)
    $end            reduce using rule 39 (instructions -> FUNCCALL .)
    SEMICOLON       reduce using rule 39 (instructions -> FUNCCALL .)


state 7

    (9) instruction -> NUMBER .
    (21) PRINT -> NUMBER . DOT
    (23) PRINT -> NUMBER . EMIT

  ! shift/reduce conflict for DOT resolved as shift
    WORD            reduce using rule 9 (instruction -> NUMBER .)
    NUMBER          reduce using rule 9 (instruction -> NUMBER .)
    PLUS            reduce using rule 9 (instruction -> NUMBER .)
    MINUS           reduce using rule 9 (instruction -> NUMBER .)
    TIMES           reduce using rule 9 (instruction -> NUMBER .)
    DIVIDE          reduce using rule 9 (instruction -> NUMBER .)
    SUP             reduce using rule 9 (instruction -> NUMBER .)
    INF             reduce using rule 9 (instruction -> NUMBER .)
    EQUALS          reduce using rule 9 (instruction -> NUMBER .)
    CR              reduce using rule 9 (instruction -> NUMBER .)
    KEY             reduce using rule 9 (instruction -> NUMBER .)
    COLON           reduce using rule 9 (instruction -> NUMBER .)
    $end            reduce using rule 9 (instruction -> NUMBER .)
    SEMICOLON       reduce using rule 9 (instruction -> NUMBER .)
    DOT             shift and go to state 26
    EMIT            shift and go to state 27

  ! DOT             [ reduce using rule 9 (instruction -> NUMBER .) ]


state 8

    (10) instruction -> operator .

    WORD            reduce using rule 10 (instruction -> operator .)
    NUMBER          reduce using rule 10 (instruction -> operator .)
    PLUS            reduce using rule 10 (instruction -> operator .)
    MINUS           reduce using rule 10 (instruction -> operator .)
    TIMES           reduce using rule 10 (instruction -> operator .)
    DIVIDE          reduce using rule 10 (instruction -> operator .)
    SUP             reduce using rule 10 (instruction -> operator .)
    INF             reduce using rule 10 (instruction -> operator .)
    EQUALS          reduce using rule 10 (instruction -> operator .)
    CR              reduce using rule 10 (instruction -> operator .)
    KEY             reduce using rule 10 (instruction -> operator .)
    DOT             reduce using rule 10 (instruction -> operator .)
    COLON           reduce using rule 10 (instruction -> operator .)
    $end            reduce using rule 10 (instruction -> operator .)
    SEMICOLON       reduce using rule 10 (instruction -> operator .)


state 9

    (11) instruction -> CARACTER .

    WORD            reduce using rule 11 (instruction -> CARACTER .)
    NUMBER          reduce using rule 11 (instruction -> CARACTER .)
    PLUS            reduce using rule 11 (instruction -> CARACTER .)
    MINUS           reduce using rule 11 (instruction -> CARACTER .)
    TIMES           reduce using rule 11 (instruction -> CARACTER .)
    DIVIDE          reduce using rule 11 (instruction -> CARACTER .)
    SUP             reduce using rule 11 (instruction -> CARACTER .)
    INF             reduce using rule 11 (instruction -> CARACTER .)
    EQUALS          reduce using rule 11 (instruction -> CARACTER .)
    CR              reduce using rule 11 (instruction -> CARACTER .)
    KEY             reduce using rule 11 (instruction -> CARACTER .)
    DOT             reduce using rule 11 (instruction -> CARACTER .)
    COLON           reduce using rule 11 (instruction -> CARACTER .)
    $end            reduce using rule 11 (instruction -> CARACTER .)
    SEMICOLON       reduce using rule 11 (instruction -> CARACTER .)


state 10

    (19) instruction -> PRINT .

    WORD            reduce using rule 19 (instruction -> PRINT .)
    NUMBER          reduce using rule 19 (instruction -> PRINT .)
    PLUS            reduce using rule 19 (instruction -> PRINT .)
    MINUS           reduce using rule 19 (instruction -> PRINT .)
    TIMES           reduce using rule 19 (instruction -> PRINT .)
    DIVIDE          reduce using rule 19 (instruction -> PRINT .)
    SUP             reduce using rule 19 (instruction -> PRINT .)
    INF             reduce using rule 19 (instruction -> PRINT .)
    EQUALS          reduce using rule 19 (instruction -> PRINT .)
    CR              reduce using rule 19 (instruction -> PRINT .)
    KEY             reduce using rule 19 (instruction -> PRINT .)
    DOT             reduce using rule 19 (instruction -> PRINT .)
    COLON           reduce using rule 19 (instruction -> PRINT .)
    $end            reduce using rule 19 (instruction -> PRINT .)
    SEMICOLON       reduce using rule 19 (instruction -> PRINT .)


state 11

    (8) FUNCTION_DEFINITION -> CONDICIONAL .

    WORD            reduce using rule 8 (FUNCTION_DEFINITION -> CONDICIONAL .)
    NUMBER          reduce using rule 8 (FUNCTION_DEFINITION -> CONDICIONAL .)
    PLUS            reduce using rule 8 (FUNCTION_DEFINITION -> CONDICIONAL .)
    MINUS           reduce using rule 8 (FUNCTION_DEFINITION -> CONDICIONAL .)
    TIMES           reduce using rule 8 (FUNCTION_DEFINITION -> CONDICIONAL .)
    DIVIDE          reduce using rule 8 (FUNCTION_DEFINITION -> CONDICIONAL .)
    SUP             reduce using rule 8 (FUNCTION_DEFINITION -> CONDICIONAL .)
    INF             reduce using rule 8 (FUNCTION_DEFINITION -> CONDICIONAL .)
    EQUALS          reduce using rule 8 (FUNCTION_DEFINITION -> CONDICIONAL .)
    CR              reduce using rule 8 (FUNCTION_DEFINITION -> CONDICIONAL .)
    KEY             reduce using rule 8 (FUNCTION_DEFINITION -> CONDICIONAL .)
    DOT             reduce using rule 8 (FUNCTION_DEFINITION -> CONDICIONAL .)
    COLON           reduce using rule 8 (FUNCTION_DEFINITION -> CONDICIONAL .)
    $end            reduce using rule 8 (FUNCTION_DEFINITION -> CONDICIONAL .)
    SEMICOLON       reduce using rule 8 (FUNCTION_DEFINITION -> CONDICIONAL .)


state 12

    (24) FUNCTION_DEFINITION -> COLON . WORD LPAREN FUNCTION_PARAMS RPAREN FUNCTION_BODY SEMICOLON
    (32) FUNCTION_DEFINITION -> COLON . WORD PRINTFUNC SEMICOLON
    (43) FUNCTION_DEFINITION -> COLON . funcword SEMICOLON
    (47) CONDICIONAL -> COLON . WORD operator IF part ELSE part THEN SEMICOLON
    (44) funcword -> . WORD WORD

    WORD            shift and go to state 28

    funcword                       shift and go to state 29

state 13

    (12) operator -> PLUS .

    WORD            reduce using rule 12 (operator -> PLUS .)
    NUMBER          reduce using rule 12 (operator -> PLUS .)
    PLUS            reduce using rule 12 (operator -> PLUS .)
    MINUS           reduce using rule 12 (operator -> PLUS .)
    TIMES           reduce using rule 12 (operator -> PLUS .)
    DIVIDE          reduce using rule 12 (operator -> PLUS .)
    SUP             reduce using rule 12 (operator -> PLUS .)
    INF             reduce using rule 12 (operator -> PLUS .)
    EQUALS          reduce using rule 12 (operator -> PLUS .)
    CR              reduce using rule 12 (operator -> PLUS .)
    KEY             reduce using rule 12 (operator -> PLUS .)
    DOT             reduce using rule 12 (operator -> PLUS .)
    COLON           reduce using rule 12 (operator -> PLUS .)
    $end            reduce using rule 12 (operator -> PLUS .)
    SEMICOLON       reduce using rule 12 (operator -> PLUS .)
    IF              reduce using rule 12 (operator -> PLUS .)


state 14

    (13) operator -> MINUS .

    WORD            reduce using rule 13 (operator -> MINUS .)
    NUMBER          reduce using rule 13 (operator -> MINUS .)
    PLUS            reduce using rule 13 (operator -> MINUS .)
    MINUS           reduce using rule 13 (operator -> MINUS .)
    TIMES           reduce using rule 13 (operator -> MINUS .)
    DIVIDE          reduce using rule 13 (operator -> MINUS .)
    SUP             reduce using rule 13 (operator -> MINUS .)
    INF             reduce using rule 13 (operator -> MINUS .)
    EQUALS          reduce using rule 13 (operator -> MINUS .)
    CR              reduce using rule 13 (operator -> MINUS .)
    KEY             reduce using rule 13 (operator -> MINUS .)
    DOT             reduce using rule 13 (operator -> MINUS .)
    COLON           reduce using rule 13 (operator -> MINUS .)
    $end            reduce using rule 13 (operator -> MINUS .)
    SEMICOLON       reduce using rule 13 (operator -> MINUS .)
    IF              reduce using rule 13 (operator -> MINUS .)


state 15

    (14) operator -> TIMES .

    WORD            reduce using rule 14 (operator -> TIMES .)
    NUMBER          reduce using rule 14 (operator -> TIMES .)
    PLUS            reduce using rule 14 (operator -> TIMES .)
    MINUS           reduce using rule 14 (operator -> TIMES .)
    TIMES           reduce using rule 14 (operator -> TIMES .)
    DIVIDE          reduce using rule 14 (operator -> TIMES .)
    SUP             reduce using rule 14 (operator -> TIMES .)
    INF             reduce using rule 14 (operator -> TIMES .)
    EQUALS          reduce using rule 14 (operator -> TIMES .)
    CR              reduce using rule 14 (operator -> TIMES .)
    KEY             reduce using rule 14 (operator -> TIMES .)
    DOT             reduce using rule 14 (operator -> TIMES .)
    COLON           reduce using rule 14 (operator -> TIMES .)
    $end            reduce using rule 14 (operator -> TIMES .)
    SEMICOLON       reduce using rule 14 (operator -> TIMES .)
    IF              reduce using rule 14 (operator -> TIMES .)


state 16

    (15) operator -> DIVIDE .

    WORD            reduce using rule 15 (operator -> DIVIDE .)
    NUMBER          reduce using rule 15 (operator -> DIVIDE .)
    PLUS            reduce using rule 15 (operator -> DIVIDE .)
    MINUS           reduce using rule 15 (operator -> DIVIDE .)
    TIMES           reduce using rule 15 (operator -> DIVIDE .)
    DIVIDE          reduce using rule 15 (operator -> DIVIDE .)
    SUP             reduce using rule 15 (operator -> DIVIDE .)
    INF             reduce using rule 15 (operator -> DIVIDE .)
    EQUALS          reduce using rule 15 (operator -> DIVIDE .)
    CR              reduce using rule 15 (operator -> DIVIDE .)
    KEY             reduce using rule 15 (operator -> DIVIDE .)
    DOT             reduce using rule 15 (operator -> DIVIDE .)
    COLON           reduce using rule 15 (operator -> DIVIDE .)
    $end            reduce using rule 15 (operator -> DIVIDE .)
    SEMICOLON       reduce using rule 15 (operator -> DIVIDE .)
    IF              reduce using rule 15 (operator -> DIVIDE .)


state 17

    (16) operator -> SUP .

    WORD            reduce using rule 16 (operator -> SUP .)
    NUMBER          reduce using rule 16 (operator -> SUP .)
    PLUS            reduce using rule 16 (operator -> SUP .)
    MINUS           reduce using rule 16 (operator -> SUP .)
    TIMES           reduce using rule 16 (operator -> SUP .)
    DIVIDE          reduce using rule 16 (operator -> SUP .)
    SUP             reduce using rule 16 (operator -> SUP .)
    INF             reduce using rule 16 (operator -> SUP .)
    EQUALS          reduce using rule 16 (operator -> SUP .)
    CR              reduce using rule 16 (operator -> SUP .)
    KEY             reduce using rule 16 (operator -> SUP .)
    DOT             reduce using rule 16 (operator -> SUP .)
    COLON           reduce using rule 16 (operator -> SUP .)
    $end            reduce using rule 16 (operator -> SUP .)
    SEMICOLON       reduce using rule 16 (operator -> SUP .)
    IF              reduce using rule 16 (operator -> SUP .)


state 18

    (17) operator -> INF .

    WORD            reduce using rule 17 (operator -> INF .)
    NUMBER          reduce using rule 17 (operator -> INF .)
    PLUS            reduce using rule 17 (operator -> INF .)
    MINUS           reduce using rule 17 (operator -> INF .)
    TIMES           reduce using rule 17 (operator -> INF .)
    DIVIDE          reduce using rule 17 (operator -> INF .)
    SUP             reduce using rule 17 (operator -> INF .)
    INF             reduce using rule 17 (operator -> INF .)
    EQUALS          reduce using rule 17 (operator -> INF .)
    CR              reduce using rule 17 (operator -> INF .)
    KEY             reduce using rule 17 (operator -> INF .)
    DOT             reduce using rule 17 (operator -> INF .)
    COLON           reduce using rule 17 (operator -> INF .)
    $end            reduce using rule 17 (operator -> INF .)
    SEMICOLON       reduce using rule 17 (operator -> INF .)
    IF              reduce using rule 17 (operator -> INF .)


state 19

    (18) operator -> EQUALS .

    WORD            reduce using rule 18 (operator -> EQUALS .)
    NUMBER          reduce using rule 18 (operator -> EQUALS .)
    PLUS            reduce using rule 18 (operator -> EQUALS .)
    MINUS           reduce using rule 18 (operator -> EQUALS .)
    TIMES           reduce using rule 18 (operator -> EQUALS .)
    DIVIDE          reduce using rule 18 (operator -> EQUALS .)
    SUP             reduce using rule 18 (operator -> EQUALS .)
    INF             reduce using rule 18 (operator -> EQUALS .)
    EQUALS          reduce using rule 18 (operator -> EQUALS .)
    CR              reduce using rule 18 (operator -> EQUALS .)
    KEY             reduce using rule 18 (operator -> EQUALS .)
    DOT             reduce using rule 18 (operator -> EQUALS .)
    COLON           reduce using rule 18 (operator -> EQUALS .)
    $end            reduce using rule 18 (operator -> EQUALS .)
    SEMICOLON       reduce using rule 18 (operator -> EQUALS .)
    IF              reduce using rule 18 (operator -> EQUALS .)


state 20

    (45) CARACTER -> CR .

    WORD            reduce using rule 45 (CARACTER -> CR .)
    NUMBER          reduce using rule 45 (CARACTER -> CR .)
    PLUS            reduce using rule 45 (CARACTER -> CR .)
    MINUS           reduce using rule 45 (CARACTER -> CR .)
    TIMES           reduce using rule 45 (CARACTER -> CR .)
    DIVIDE          reduce using rule 45 (CARACTER -> CR .)
    SUP             reduce using rule 45 (CARACTER -> CR .)
    INF             reduce using rule 45 (CARACTER -> CR .)
    EQUALS          reduce using rule 45 (CARACTER -> CR .)
    CR              reduce using rule 45 (CARACTER -> CR .)
    KEY             reduce using rule 45 (CARACTER -> CR .)
    DOT             reduce using rule 45 (CARACTER -> CR .)
    COLON           reduce using rule 45 (CARACTER -> CR .)
    $end            reduce using rule 45 (CARACTER -> CR .)
    SEMICOLON       reduce using rule 45 (CARACTER -> CR .)


state 21

    (46) CARACTER -> KEY .

    WORD            reduce using rule 46 (CARACTER -> KEY .)
    NUMBER          reduce using rule 46 (CARACTER -> KEY .)
    PLUS            reduce using rule 46 (CARACTER -> KEY .)
    MINUS           reduce using rule 46 (CARACTER -> KEY .)
    TIMES           reduce using rule 46 (CARACTER -> KEY .)
    DIVIDE          reduce using rule 46 (CARACTER -> KEY .)
    SUP             reduce using rule 46 (CARACTER -> KEY .)
    INF             reduce using rule 46 (CARACTER -> KEY .)
    EQUALS          reduce using rule 46 (CARACTER -> KEY .)
    CR              reduce using rule 46 (CARACTER -> KEY .)
    KEY             reduce using rule 46 (CARACTER -> KEY .)
    DOT             reduce using rule 46 (CARACTER -> KEY .)
    COLON           reduce using rule 46 (CARACTER -> KEY .)
    $end            reduce using rule 46 (CARACTER -> KEY .)
    SEMICOLON       reduce using rule 46 (CARACTER -> KEY .)


state 22

    (20) PRINT -> DOT .
    (22) PRINT -> DOT . QUOTE words QUOTE

    WORD            reduce using rule 20 (PRINT -> DOT .)
    NUMBER          reduce using rule 20 (PRINT -> DOT .)
    PLUS            reduce using rule 20 (PRINT -> DOT .)
    MINUS           reduce using rule 20 (PRINT -> DOT .)
    TIMES           reduce using rule 20 (PRINT -> DOT .)
    DIVIDE          reduce using rule 20 (PRINT -> DOT .)
    SUP             reduce using rule 20 (PRINT -> DOT .)
    INF             reduce using rule 20 (PRINT -> DOT .)
    EQUALS          reduce using rule 20 (PRINT -> DOT .)
    CR              reduce using rule 20 (PRINT -> DOT .)
    KEY             reduce using rule 20 (PRINT -> DOT .)
    DOT             reduce using rule 20 (PRINT -> DOT .)
    COLON           reduce using rule 20 (PRINT -> DOT .)
    $end            reduce using rule 20 (PRINT -> DOT .)
    SEMICOLON       reduce using rule 20 (PRINT -> DOT .)
    QUOTE           shift and go to state 30


state 23

    (7) instruction -> instructions . WORD instructions
    (2) instructions -> instructions . instruction
    (4) instructions -> instructions . instruction WORD
    (5) instructions -> instructions . instruction WORD instruction
    (7) instruction -> . instructions WORD instructions
    (9) instruction -> . NUMBER
    (10) instruction -> . operator
    (11) instruction -> . CARACTER
    (19) instruction -> . PRINT
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (4) instructions -> . instructions instruction WORD
    (5) instructions -> . instructions instruction WORD instruction
    (6) instructions -> . FUNCTION_DEFINITION
    (39) instructions -> . FUNCCALL
    (12) operator -> . PLUS
    (13) operator -> . MINUS
    (14) operator -> . TIMES
    (15) operator -> . DIVIDE
    (16) operator -> . SUP
    (17) operator -> . INF
    (18) operator -> . EQUALS
    (45) CARACTER -> . CR
    (46) CARACTER -> . KEY
    (20) PRINT -> . DOT
    (21) PRINT -> . NUMBER DOT
    (22) PRINT -> . DOT QUOTE words QUOTE
    (23) PRINT -> . NUMBER EMIT
    (8) FUNCTION_DEFINITION -> . CONDICIONAL
    (24) FUNCTION_DEFINITION -> . COLON WORD LPAREN FUNCTION_PARAMS RPAREN FUNCTION_BODY SEMICOLON
    (32) FUNCTION_DEFINITION -> . COLON WORD PRINTFUNC SEMICOLON
    (43) FUNCTION_DEFINITION -> . COLON funcword SEMICOLON
    (40) FUNCCALL -> . WORD
    (47) CONDICIONAL -> . COLON WORD operator IF part ELSE part THEN SEMICOLON

    WORD            shift and go to state 25
    NUMBER          shift and go to state 7
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    TIMES           shift and go to state 15
    DIVIDE          shift and go to state 16
    SUP             shift and go to state 17
    INF             shift and go to state 18
    EQUALS          shift and go to state 19
    CR              shift and go to state 20
    KEY             shift and go to state 21
    DOT             shift and go to state 22
    COLON           shift and go to state 12

    instructions                   shift and go to state 23
    instruction                    shift and go to state 24
    operator                       shift and go to state 8
    CARACTER                       shift and go to state 9
    PRINT                          shift and go to state 10
    FUNCTION_DEFINITION            shift and go to state 5
    FUNCCALL                       shift and go to state 6
    CONDICIONAL                    shift and go to state 11

state 24

    (2) instructions -> instructions instruction .
    (4) instructions -> instructions instruction . WORD
    (5) instructions -> instructions instruction . WORD instruction
    (3) instructions -> instruction .

  ! shift/reduce conflict for WORD resolved as shift
  ! shift/reduce conflict for WORD resolved as shift
  ! reduce/reduce conflict for NUMBER resolved using rule 2 (instructions -> instructions instruction .)
  ! reduce/reduce conflict for PLUS resolved using rule 2 (instructions -> instructions instruction .)
  ! reduce/reduce conflict for MINUS resolved using rule 2 (instructions -> instructions instruction .)
  ! reduce/reduce conflict for TIMES resolved using rule 2 (instructions -> instructions instruction .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 2 (instructions -> instructions instruction .)
  ! reduce/reduce conflict for SUP resolved using rule 2 (instructions -> instructions instruction .)
  ! reduce/reduce conflict for INF resolved using rule 2 (instructions -> instructions instruction .)
  ! reduce/reduce conflict for EQUALS resolved using rule 2 (instructions -> instructions instruction .)
  ! reduce/reduce conflict for CR resolved using rule 2 (instructions -> instructions instruction .)
  ! reduce/reduce conflict for KEY resolved using rule 2 (instructions -> instructions instruction .)
  ! reduce/reduce conflict for DOT resolved using rule 2 (instructions -> instructions instruction .)
  ! reduce/reduce conflict for COLON resolved using rule 2 (instructions -> instructions instruction .)
    NUMBER          reduce using rule 2 (instructions -> instructions instruction .)
    PLUS            reduce using rule 2 (instructions -> instructions instruction .)
    MINUS           reduce using rule 2 (instructions -> instructions instruction .)
    TIMES           reduce using rule 2 (instructions -> instructions instruction .)
    DIVIDE          reduce using rule 2 (instructions -> instructions instruction .)
    SUP             reduce using rule 2 (instructions -> instructions instruction .)
    INF             reduce using rule 2 (instructions -> instructions instruction .)
    EQUALS          reduce using rule 2 (instructions -> instructions instruction .)
    CR              reduce using rule 2 (instructions -> instructions instruction .)
    KEY             reduce using rule 2 (instructions -> instructions instruction .)
    DOT             reduce using rule 2 (instructions -> instructions instruction .)
    COLON           reduce using rule 2 (instructions -> instructions instruction .)
    $end            reduce using rule 2 (instructions -> instructions instruction .)
    SEMICOLON       reduce using rule 2 (instructions -> instructions instruction .)
    WORD            shift and go to state 31

  ! WORD            [ reduce using rule 2 (instructions -> instructions instruction .) ]
  ! WORD            [ reduce using rule 3 (instructions -> instruction .) ]
  ! NUMBER          [ reduce using rule 3 (instructions -> instruction .) ]
  ! PLUS            [ reduce using rule 3 (instructions -> instruction .) ]
  ! MINUS           [ reduce using rule 3 (instructions -> instruction .) ]
  ! TIMES           [ reduce using rule 3 (instructions -> instruction .) ]
  ! DIVIDE          [ reduce using rule 3 (instructions -> instruction .) ]
  ! SUP             [ reduce using rule 3 (instructions -> instruction .) ]
  ! INF             [ reduce using rule 3 (instructions -> instruction .) ]
  ! EQUALS          [ reduce using rule 3 (instructions -> instruction .) ]
  ! CR              [ reduce using rule 3 (instructions -> instruction .) ]
  ! KEY             [ reduce using rule 3 (instructions -> instruction .) ]
  ! DOT             [ reduce using rule 3 (instructions -> instruction .) ]
  ! COLON           [ reduce using rule 3 (instructions -> instruction .) ]


state 25

    (7) instruction -> instructions WORD . instructions
    (40) FUNCCALL -> WORD .
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (4) instructions -> . instructions instruction WORD
    (5) instructions -> . instructions instruction WORD instruction
    (6) instructions -> . FUNCTION_DEFINITION
    (39) instructions -> . FUNCCALL
    (7) instruction -> . instructions WORD instructions
    (9) instruction -> . NUMBER
    (10) instruction -> . operator
    (11) instruction -> . CARACTER
    (19) instruction -> . PRINT
    (8) FUNCTION_DEFINITION -> . CONDICIONAL
    (24) FUNCTION_DEFINITION -> . COLON WORD LPAREN FUNCTION_PARAMS RPAREN FUNCTION_BODY SEMICOLON
    (32) FUNCTION_DEFINITION -> . COLON WORD PRINTFUNC SEMICOLON
    (43) FUNCTION_DEFINITION -> . COLON funcword SEMICOLON
    (40) FUNCCALL -> . WORD
    (12) operator -> . PLUS
    (13) operator -> . MINUS
    (14) operator -> . TIMES
    (15) operator -> . DIVIDE
    (16) operator -> . SUP
    (17) operator -> . INF
    (18) operator -> . EQUALS
    (45) CARACTER -> . CR
    (46) CARACTER -> . KEY
    (20) PRINT -> . DOT
    (21) PRINT -> . NUMBER DOT
    (22) PRINT -> . DOT QUOTE words QUOTE
    (23) PRINT -> . NUMBER EMIT
    (47) CONDICIONAL -> . COLON WORD operator IF part ELSE part THEN SEMICOLON

  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for WORD resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INF resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for CR resolved as shift
  ! shift/reduce conflict for KEY resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
    NUMBER          shift and go to state 7
    COLON           shift and go to state 12
    WORD            shift and go to state 4
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    TIMES           shift and go to state 15
    DIVIDE          shift and go to state 16
    SUP             shift and go to state 17
    INF             shift and go to state 18
    EQUALS          shift and go to state 19
    CR              shift and go to state 20
    KEY             shift and go to state 21
    DOT             shift and go to state 22

  ! WORD            [ reduce using rule 40 (FUNCCALL -> WORD .) ]
  ! NUMBER          [ reduce using rule 40 (FUNCCALL -> WORD .) ]
  ! PLUS            [ reduce using rule 40 (FUNCCALL -> WORD .) ]
  ! MINUS           [ reduce using rule 40 (FUNCCALL -> WORD .) ]
  ! TIMES           [ reduce using rule 40 (FUNCCALL -> WORD .) ]
  ! DIVIDE          [ reduce using rule 40 (FUNCCALL -> WORD .) ]
  ! SUP             [ reduce using rule 40 (FUNCCALL -> WORD .) ]
  ! INF             [ reduce using rule 40 (FUNCCALL -> WORD .) ]
  ! EQUALS          [ reduce using rule 40 (FUNCCALL -> WORD .) ]
  ! CR              [ reduce using rule 40 (FUNCCALL -> WORD .) ]
  ! KEY             [ reduce using rule 40 (FUNCCALL -> WORD .) ]
  ! DOT             [ reduce using rule 40 (FUNCCALL -> WORD .) ]
  ! COLON           [ reduce using rule 40 (FUNCCALL -> WORD .) ]

    instructions                   shift and go to state 32
    instruction                    shift and go to state 3
    FUNCTION_DEFINITION            shift and go to state 5
    FUNCCALL                       shift and go to state 6
    operator                       shift and go to state 8
    CARACTER                       shift and go to state 9
    PRINT                          shift and go to state 10
    CONDICIONAL                    shift and go to state 11

state 26

    (21) PRINT -> NUMBER DOT .

    WORD            reduce using rule 21 (PRINT -> NUMBER DOT .)
    NUMBER          reduce using rule 21 (PRINT -> NUMBER DOT .)
    PLUS            reduce using rule 21 (PRINT -> NUMBER DOT .)
    MINUS           reduce using rule 21 (PRINT -> NUMBER DOT .)
    TIMES           reduce using rule 21 (PRINT -> NUMBER DOT .)
    DIVIDE          reduce using rule 21 (PRINT -> NUMBER DOT .)
    SUP             reduce using rule 21 (PRINT -> NUMBER DOT .)
    INF             reduce using rule 21 (PRINT -> NUMBER DOT .)
    EQUALS          reduce using rule 21 (PRINT -> NUMBER DOT .)
    CR              reduce using rule 21 (PRINT -> NUMBER DOT .)
    KEY             reduce using rule 21 (PRINT -> NUMBER DOT .)
    DOT             reduce using rule 21 (PRINT -> NUMBER DOT .)
    COLON           reduce using rule 21 (PRINT -> NUMBER DOT .)
    $end            reduce using rule 21 (PRINT -> NUMBER DOT .)
    SEMICOLON       reduce using rule 21 (PRINT -> NUMBER DOT .)


state 27

    (23) PRINT -> NUMBER EMIT .

    WORD            reduce using rule 23 (PRINT -> NUMBER EMIT .)
    NUMBER          reduce using rule 23 (PRINT -> NUMBER EMIT .)
    PLUS            reduce using rule 23 (PRINT -> NUMBER EMIT .)
    MINUS           reduce using rule 23 (PRINT -> NUMBER EMIT .)
    TIMES           reduce using rule 23 (PRINT -> NUMBER EMIT .)
    DIVIDE          reduce using rule 23 (PRINT -> NUMBER EMIT .)
    SUP             reduce using rule 23 (PRINT -> NUMBER EMIT .)
    INF             reduce using rule 23 (PRINT -> NUMBER EMIT .)
    EQUALS          reduce using rule 23 (PRINT -> NUMBER EMIT .)
    CR              reduce using rule 23 (PRINT -> NUMBER EMIT .)
    KEY             reduce using rule 23 (PRINT -> NUMBER EMIT .)
    DOT             reduce using rule 23 (PRINT -> NUMBER EMIT .)
    COLON           reduce using rule 23 (PRINT -> NUMBER EMIT .)
    $end            reduce using rule 23 (PRINT -> NUMBER EMIT .)
    SEMICOLON       reduce using rule 23 (PRINT -> NUMBER EMIT .)


state 28

    (24) FUNCTION_DEFINITION -> COLON WORD . LPAREN FUNCTION_PARAMS RPAREN FUNCTION_BODY SEMICOLON
    (32) FUNCTION_DEFINITION -> COLON WORD . PRINTFUNC SEMICOLON
    (47) CONDICIONAL -> COLON WORD . operator IF part ELSE part THEN SEMICOLON
    (44) funcword -> WORD . WORD
    (33) PRINTFUNC -> . DOT QUOTE words QUOTE
    (34) PRINTFUNC -> . DOT QUOTE words QUOTE CARACTER
    (35) PRINTFUNC -> . QUOTE words QUOTE
    (12) operator -> . PLUS
    (13) operator -> . MINUS
    (14) operator -> . TIMES
    (15) operator -> . DIVIDE
    (16) operator -> . SUP
    (17) operator -> . INF
    (18) operator -> . EQUALS

    LPAREN          shift and go to state 34
    WORD            shift and go to state 33
    DOT             shift and go to state 37
    QUOTE           shift and go to state 38
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    TIMES           shift and go to state 15
    DIVIDE          shift and go to state 16
    SUP             shift and go to state 17
    INF             shift and go to state 18
    EQUALS          shift and go to state 19

    PRINTFUNC                      shift and go to state 35
    operator                       shift and go to state 36

state 29

    (43) FUNCTION_DEFINITION -> COLON funcword . SEMICOLON

    SEMICOLON       shift and go to state 39


state 30

    (22) PRINT -> DOT QUOTE . words QUOTE
    (36) words -> . words WORD
    (37) words -> . words WORD sinais
    (38) words -> . WORD

    WORD            shift and go to state 41

    words                          shift and go to state 40

state 31

    (4) instructions -> instructions instruction WORD .
    (5) instructions -> instructions instruction WORD . instruction
    (7) instruction -> . instructions WORD instructions
    (9) instruction -> . NUMBER
    (10) instruction -> . operator
    (11) instruction -> . CARACTER
    (19) instruction -> . PRINT
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (4) instructions -> . instructions instruction WORD
    (5) instructions -> . instructions instruction WORD instruction
    (6) instructions -> . FUNCTION_DEFINITION
    (39) instructions -> . FUNCCALL
    (12) operator -> . PLUS
    (13) operator -> . MINUS
    (14) operator -> . TIMES
    (15) operator -> . DIVIDE
    (16) operator -> . SUP
    (17) operator -> . INF
    (18) operator -> . EQUALS
    (45) CARACTER -> . CR
    (46) CARACTER -> . KEY
    (20) PRINT -> . DOT
    (21) PRINT -> . NUMBER DOT
    (22) PRINT -> . DOT QUOTE words QUOTE
    (23) PRINT -> . NUMBER EMIT
    (8) FUNCTION_DEFINITION -> . CONDICIONAL
    (24) FUNCTION_DEFINITION -> . COLON WORD LPAREN FUNCTION_PARAMS RPAREN FUNCTION_BODY SEMICOLON
    (32) FUNCTION_DEFINITION -> . COLON WORD PRINTFUNC SEMICOLON
    (43) FUNCTION_DEFINITION -> . COLON funcword SEMICOLON
    (40) FUNCCALL -> . WORD
    (47) CONDICIONAL -> . COLON WORD operator IF part ELSE part THEN SEMICOLON

  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INF resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for CR resolved as shift
  ! shift/reduce conflict for KEY resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for WORD resolved as shift
    $end            reduce using rule 4 (instructions -> instructions instruction WORD .)
    SEMICOLON       reduce using rule 4 (instructions -> instructions instruction WORD .)
    NUMBER          shift and go to state 7
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    TIMES           shift and go to state 15
    DIVIDE          shift and go to state 16
    SUP             shift and go to state 17
    INF             shift and go to state 18
    EQUALS          shift and go to state 19
    CR              shift and go to state 20
    KEY             shift and go to state 21
    DOT             shift and go to state 22
    COLON           shift and go to state 12
    WORD            shift and go to state 4

  ! WORD            [ reduce using rule 4 (instructions -> instructions instruction WORD .) ]
  ! NUMBER          [ reduce using rule 4 (instructions -> instructions instruction WORD .) ]
  ! PLUS            [ reduce using rule 4 (instructions -> instructions instruction WORD .) ]
  ! MINUS           [ reduce using rule 4 (instructions -> instructions instruction WORD .) ]
  ! TIMES           [ reduce using rule 4 (instructions -> instructions instruction WORD .) ]
  ! DIVIDE          [ reduce using rule 4 (instructions -> instructions instruction WORD .) ]
  ! SUP             [ reduce using rule 4 (instructions -> instructions instruction WORD .) ]
  ! INF             [ reduce using rule 4 (instructions -> instructions instruction WORD .) ]
  ! EQUALS          [ reduce using rule 4 (instructions -> instructions instruction WORD .) ]
  ! CR              [ reduce using rule 4 (instructions -> instructions instruction WORD .) ]
  ! KEY             [ reduce using rule 4 (instructions -> instructions instruction WORD .) ]
  ! DOT             [ reduce using rule 4 (instructions -> instructions instruction WORD .) ]
  ! COLON           [ reduce using rule 4 (instructions -> instructions instruction WORD .) ]

    instructions                   shift and go to state 23
    instruction                    shift and go to state 42
    operator                       shift and go to state 8
    CARACTER                       shift and go to state 9
    PRINT                          shift and go to state 10
    FUNCTION_DEFINITION            shift and go to state 5
    FUNCCALL                       shift and go to state 6
    CONDICIONAL                    shift and go to state 11

state 32

    (7) instruction -> instructions WORD instructions .
    (2) instructions -> instructions . instruction
    (4) instructions -> instructions . instruction WORD
    (5) instructions -> instructions . instruction WORD instruction
    (7) instruction -> instructions . WORD instructions
    (7) instruction -> . instructions WORD instructions
    (9) instruction -> . NUMBER
    (10) instruction -> . operator
    (11) instruction -> . CARACTER
    (19) instruction -> . PRINT
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (4) instructions -> . instructions instruction WORD
    (5) instructions -> . instructions instruction WORD instruction
    (6) instructions -> . FUNCTION_DEFINITION
    (39) instructions -> . FUNCCALL
    (12) operator -> . PLUS
    (13) operator -> . MINUS
    (14) operator -> . TIMES
    (15) operator -> . DIVIDE
    (16) operator -> . SUP
    (17) operator -> . INF
    (18) operator -> . EQUALS
    (45) CARACTER -> . CR
    (46) CARACTER -> . KEY
    (20) PRINT -> . DOT
    (21) PRINT -> . NUMBER DOT
    (22) PRINT -> . DOT QUOTE words QUOTE
    (23) PRINT -> . NUMBER EMIT
    (8) FUNCTION_DEFINITION -> . CONDICIONAL
    (24) FUNCTION_DEFINITION -> . COLON WORD LPAREN FUNCTION_PARAMS RPAREN FUNCTION_BODY SEMICOLON
    (32) FUNCTION_DEFINITION -> . COLON WORD PRINTFUNC SEMICOLON
    (43) FUNCTION_DEFINITION -> . COLON funcword SEMICOLON
    (40) FUNCCALL -> . WORD
    (47) CONDICIONAL -> . COLON WORD operator IF part ELSE part THEN SEMICOLON

  ! shift/reduce conflict for WORD resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INF resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for CR resolved as shift
  ! shift/reduce conflict for KEY resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
    $end            reduce using rule 7 (instruction -> instructions WORD instructions .)
    SEMICOLON       reduce using rule 7 (instruction -> instructions WORD instructions .)
    WORD            shift and go to state 25
    NUMBER          shift and go to state 7
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    TIMES           shift and go to state 15
    DIVIDE          shift and go to state 16
    SUP             shift and go to state 17
    INF             shift and go to state 18
    EQUALS          shift and go to state 19
    CR              shift and go to state 20
    KEY             shift and go to state 21
    DOT             shift and go to state 22
    COLON           shift and go to state 12

  ! WORD            [ reduce using rule 7 (instruction -> instructions WORD instructions .) ]
  ! NUMBER          [ reduce using rule 7 (instruction -> instructions WORD instructions .) ]
  ! PLUS            [ reduce using rule 7 (instruction -> instructions WORD instructions .) ]
  ! MINUS           [ reduce using rule 7 (instruction -> instructions WORD instructions .) ]
  ! TIMES           [ reduce using rule 7 (instruction -> instructions WORD instructions .) ]
  ! DIVIDE          [ reduce using rule 7 (instruction -> instructions WORD instructions .) ]
  ! SUP             [ reduce using rule 7 (instruction -> instructions WORD instructions .) ]
  ! INF             [ reduce using rule 7 (instruction -> instructions WORD instructions .) ]
  ! EQUALS          [ reduce using rule 7 (instruction -> instructions WORD instructions .) ]
  ! CR              [ reduce using rule 7 (instruction -> instructions WORD instructions .) ]
  ! KEY             [ reduce using rule 7 (instruction -> instructions WORD instructions .) ]
  ! DOT             [ reduce using rule 7 (instruction -> instructions WORD instructions .) ]
  ! COLON           [ reduce using rule 7 (instruction -> instructions WORD instructions .) ]

    instructions                   shift and go to state 23
    instruction                    shift and go to state 24
    operator                       shift and go to state 8
    CARACTER                       shift and go to state 9
    PRINT                          shift and go to state 10
    FUNCTION_DEFINITION            shift and go to state 5
    FUNCCALL                       shift and go to state 6
    CONDICIONAL                    shift and go to state 11

state 33

    (44) funcword -> WORD WORD .

    SEMICOLON       reduce using rule 44 (funcword -> WORD WORD .)


state 34

    (24) FUNCTION_DEFINITION -> COLON WORD LPAREN . FUNCTION_PARAMS RPAREN FUNCTION_BODY SEMICOLON
    (25) FUNCTION_PARAMS -> . PARAMS FUNCTION_PARAMS
    (26) FUNCTION_PARAMS -> . PARAMS MIDFUNC WORD
    (27) PARAMS -> . ID
    (28) PARAMS -> . MIDFUNC
    (29) PARAMS -> . WORD

    ID              shift and go to state 47
    MIDFUNC         shift and go to state 46
    WORD            shift and go to state 43

    FUNCTION_PARAMS                shift and go to state 44
    PARAMS                         shift and go to state 45

state 35

    (32) FUNCTION_DEFINITION -> COLON WORD PRINTFUNC . SEMICOLON

    SEMICOLON       shift and go to state 48


state 36

    (47) CONDICIONAL -> COLON WORD operator . IF part ELSE part THEN SEMICOLON

    IF              shift and go to state 49


state 37

    (33) PRINTFUNC -> DOT . QUOTE words QUOTE
    (34) PRINTFUNC -> DOT . QUOTE words QUOTE CARACTER

    QUOTE           shift and go to state 50


state 38

    (35) PRINTFUNC -> QUOTE . words QUOTE
    (36) words -> . words WORD
    (37) words -> . words WORD sinais
    (38) words -> . WORD

    WORD            shift and go to state 41

    words                          shift and go to state 51

state 39

    (43) FUNCTION_DEFINITION -> COLON funcword SEMICOLON .

    WORD            reduce using rule 43 (FUNCTION_DEFINITION -> COLON funcword SEMICOLON .)
    NUMBER          reduce using rule 43 (FUNCTION_DEFINITION -> COLON funcword SEMICOLON .)
    PLUS            reduce using rule 43 (FUNCTION_DEFINITION -> COLON funcword SEMICOLON .)
    MINUS           reduce using rule 43 (FUNCTION_DEFINITION -> COLON funcword SEMICOLON .)
    TIMES           reduce using rule 43 (FUNCTION_DEFINITION -> COLON funcword SEMICOLON .)
    DIVIDE          reduce using rule 43 (FUNCTION_DEFINITION -> COLON funcword SEMICOLON .)
    SUP             reduce using rule 43 (FUNCTION_DEFINITION -> COLON funcword SEMICOLON .)
    INF             reduce using rule 43 (FUNCTION_DEFINITION -> COLON funcword SEMICOLON .)
    EQUALS          reduce using rule 43 (FUNCTION_DEFINITION -> COLON funcword SEMICOLON .)
    CR              reduce using rule 43 (FUNCTION_DEFINITION -> COLON funcword SEMICOLON .)
    KEY             reduce using rule 43 (FUNCTION_DEFINITION -> COLON funcword SEMICOLON .)
    DOT             reduce using rule 43 (FUNCTION_DEFINITION -> COLON funcword SEMICOLON .)
    COLON           reduce using rule 43 (FUNCTION_DEFINITION -> COLON funcword SEMICOLON .)
    $end            reduce using rule 43 (FUNCTION_DEFINITION -> COLON funcword SEMICOLON .)
    SEMICOLON       reduce using rule 43 (FUNCTION_DEFINITION -> COLON funcword SEMICOLON .)


state 40

    (22) PRINT -> DOT QUOTE words . QUOTE
    (36) words -> words . WORD
    (37) words -> words . WORD sinais

    QUOTE           shift and go to state 52
    WORD            shift and go to state 53


state 41

    (38) words -> WORD .

    QUOTE           reduce using rule 38 (words -> WORD .)
    WORD            reduce using rule 38 (words -> WORD .)


state 42

    (5) instructions -> instructions instruction WORD instruction .
    (3) instructions -> instruction .

  ! reduce/reduce conflict for WORD resolved using rule 3 (instructions -> instruction .)
  ! reduce/reduce conflict for NUMBER resolved using rule 3 (instructions -> instruction .)
  ! reduce/reduce conflict for PLUS resolved using rule 3 (instructions -> instruction .)
  ! reduce/reduce conflict for MINUS resolved using rule 3 (instructions -> instruction .)
  ! reduce/reduce conflict for TIMES resolved using rule 3 (instructions -> instruction .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 3 (instructions -> instruction .)
  ! reduce/reduce conflict for SUP resolved using rule 3 (instructions -> instruction .)
  ! reduce/reduce conflict for INF resolved using rule 3 (instructions -> instruction .)
  ! reduce/reduce conflict for EQUALS resolved using rule 3 (instructions -> instruction .)
  ! reduce/reduce conflict for CR resolved using rule 3 (instructions -> instruction .)
  ! reduce/reduce conflict for KEY resolved using rule 3 (instructions -> instruction .)
  ! reduce/reduce conflict for DOT resolved using rule 3 (instructions -> instruction .)
  ! reduce/reduce conflict for COLON resolved using rule 3 (instructions -> instruction .)
    $end            reduce using rule 5 (instructions -> instructions instruction WORD instruction .)
    SEMICOLON       reduce using rule 5 (instructions -> instructions instruction WORD instruction .)
    WORD            reduce using rule 3 (instructions -> instruction .)
    NUMBER          reduce using rule 3 (instructions -> instruction .)
    PLUS            reduce using rule 3 (instructions -> instruction .)
    MINUS           reduce using rule 3 (instructions -> instruction .)
    TIMES           reduce using rule 3 (instructions -> instruction .)
    DIVIDE          reduce using rule 3 (instructions -> instruction .)
    SUP             reduce using rule 3 (instructions -> instruction .)
    INF             reduce using rule 3 (instructions -> instruction .)
    EQUALS          reduce using rule 3 (instructions -> instruction .)
    CR              reduce using rule 3 (instructions -> instruction .)
    KEY             reduce using rule 3 (instructions -> instruction .)
    DOT             reduce using rule 3 (instructions -> instruction .)
    COLON           reduce using rule 3 (instructions -> instruction .)

  ! WORD            [ reduce using rule 5 (instructions -> instructions instruction WORD instruction .) ]
  ! NUMBER          [ reduce using rule 5 (instructions -> instructions instruction WORD instruction .) ]
  ! PLUS            [ reduce using rule 5 (instructions -> instructions instruction WORD instruction .) ]
  ! MINUS           [ reduce using rule 5 (instructions -> instructions instruction WORD instruction .) ]
  ! TIMES           [ reduce using rule 5 (instructions -> instructions instruction WORD instruction .) ]
  ! DIVIDE          [ reduce using rule 5 (instructions -> instructions instruction WORD instruction .) ]
  ! SUP             [ reduce using rule 5 (instructions -> instructions instruction WORD instruction .) ]
  ! INF             [ reduce using rule 5 (instructions -> instructions instruction WORD instruction .) ]
  ! EQUALS          [ reduce using rule 5 (instructions -> instructions instruction WORD instruction .) ]
  ! CR              [ reduce using rule 5 (instructions -> instructions instruction WORD instruction .) ]
  ! KEY             [ reduce using rule 5 (instructions -> instructions instruction WORD instruction .) ]
  ! DOT             [ reduce using rule 5 (instructions -> instructions instruction WORD instruction .) ]
  ! COLON           [ reduce using rule 5 (instructions -> instructions instruction WORD instruction .) ]


state 43

    (29) PARAMS -> WORD .

    MIDFUNC         reduce using rule 29 (PARAMS -> WORD .)
    ID              reduce using rule 29 (PARAMS -> WORD .)
    WORD            reduce using rule 29 (PARAMS -> WORD .)


state 44

    (24) FUNCTION_DEFINITION -> COLON WORD LPAREN FUNCTION_PARAMS . RPAREN FUNCTION_BODY SEMICOLON

    RPAREN          shift and go to state 54


state 45

    (25) FUNCTION_PARAMS -> PARAMS . FUNCTION_PARAMS
    (26) FUNCTION_PARAMS -> PARAMS . MIDFUNC WORD
    (25) FUNCTION_PARAMS -> . PARAMS FUNCTION_PARAMS
    (26) FUNCTION_PARAMS -> . PARAMS MIDFUNC WORD
    (27) PARAMS -> . ID
    (28) PARAMS -> . MIDFUNC
    (29) PARAMS -> . WORD

    MIDFUNC         shift and go to state 56
    ID              shift and go to state 47
    WORD            shift and go to state 43

    PARAMS                         shift and go to state 45
    FUNCTION_PARAMS                shift and go to state 55

state 46

    (28) PARAMS -> MIDFUNC .

    MIDFUNC         reduce using rule 28 (PARAMS -> MIDFUNC .)
    ID              reduce using rule 28 (PARAMS -> MIDFUNC .)
    WORD            reduce using rule 28 (PARAMS -> MIDFUNC .)


state 47

    (27) PARAMS -> ID .

    MIDFUNC         reduce using rule 27 (PARAMS -> ID .)
    ID              reduce using rule 27 (PARAMS -> ID .)
    WORD            reduce using rule 27 (PARAMS -> ID .)


state 48

    (32) FUNCTION_DEFINITION -> COLON WORD PRINTFUNC SEMICOLON .

    WORD            reduce using rule 32 (FUNCTION_DEFINITION -> COLON WORD PRINTFUNC SEMICOLON .)
    NUMBER          reduce using rule 32 (FUNCTION_DEFINITION -> COLON WORD PRINTFUNC SEMICOLON .)
    PLUS            reduce using rule 32 (FUNCTION_DEFINITION -> COLON WORD PRINTFUNC SEMICOLON .)
    MINUS           reduce using rule 32 (FUNCTION_DEFINITION -> COLON WORD PRINTFUNC SEMICOLON .)
    TIMES           reduce using rule 32 (FUNCTION_DEFINITION -> COLON WORD PRINTFUNC SEMICOLON .)
    DIVIDE          reduce using rule 32 (FUNCTION_DEFINITION -> COLON WORD PRINTFUNC SEMICOLON .)
    SUP             reduce using rule 32 (FUNCTION_DEFINITION -> COLON WORD PRINTFUNC SEMICOLON .)
    INF             reduce using rule 32 (FUNCTION_DEFINITION -> COLON WORD PRINTFUNC SEMICOLON .)
    EQUALS          reduce using rule 32 (FUNCTION_DEFINITION -> COLON WORD PRINTFUNC SEMICOLON .)
    CR              reduce using rule 32 (FUNCTION_DEFINITION -> COLON WORD PRINTFUNC SEMICOLON .)
    KEY             reduce using rule 32 (FUNCTION_DEFINITION -> COLON WORD PRINTFUNC SEMICOLON .)
    DOT             reduce using rule 32 (FUNCTION_DEFINITION -> COLON WORD PRINTFUNC SEMICOLON .)
    COLON           reduce using rule 32 (FUNCTION_DEFINITION -> COLON WORD PRINTFUNC SEMICOLON .)
    $end            reduce using rule 32 (FUNCTION_DEFINITION -> COLON WORD PRINTFUNC SEMICOLON .)
    SEMICOLON       reduce using rule 32 (FUNCTION_DEFINITION -> COLON WORD PRINTFUNC SEMICOLON .)


state 49

    (47) CONDICIONAL -> COLON WORD operator IF . part ELSE part THEN SEMICOLON
    (48) part -> . DOT QUOTE words QUOTE
    (49) part -> . QUOTE words QUOTE

    DOT             shift and go to state 58
    QUOTE           shift and go to state 59

    part                           shift and go to state 57

state 50

    (33) PRINTFUNC -> DOT QUOTE . words QUOTE
    (34) PRINTFUNC -> DOT QUOTE . words QUOTE CARACTER
    (36) words -> . words WORD
    (37) words -> . words WORD sinais
    (38) words -> . WORD

    WORD            shift and go to state 41

    words                          shift and go to state 60

state 51

    (35) PRINTFUNC -> QUOTE words . QUOTE
    (36) words -> words . WORD
    (37) words -> words . WORD sinais

    QUOTE           shift and go to state 61
    WORD            shift and go to state 53


state 52

    (22) PRINT -> DOT QUOTE words QUOTE .

    WORD            reduce using rule 22 (PRINT -> DOT QUOTE words QUOTE .)
    NUMBER          reduce using rule 22 (PRINT -> DOT QUOTE words QUOTE .)
    PLUS            reduce using rule 22 (PRINT -> DOT QUOTE words QUOTE .)
    MINUS           reduce using rule 22 (PRINT -> DOT QUOTE words QUOTE .)
    TIMES           reduce using rule 22 (PRINT -> DOT QUOTE words QUOTE .)
    DIVIDE          reduce using rule 22 (PRINT -> DOT QUOTE words QUOTE .)
    SUP             reduce using rule 22 (PRINT -> DOT QUOTE words QUOTE .)
    INF             reduce using rule 22 (PRINT -> DOT QUOTE words QUOTE .)
    EQUALS          reduce using rule 22 (PRINT -> DOT QUOTE words QUOTE .)
    CR              reduce using rule 22 (PRINT -> DOT QUOTE words QUOTE .)
    KEY             reduce using rule 22 (PRINT -> DOT QUOTE words QUOTE .)
    DOT             reduce using rule 22 (PRINT -> DOT QUOTE words QUOTE .)
    COLON           reduce using rule 22 (PRINT -> DOT QUOTE words QUOTE .)
    $end            reduce using rule 22 (PRINT -> DOT QUOTE words QUOTE .)
    SEMICOLON       reduce using rule 22 (PRINT -> DOT QUOTE words QUOTE .)


state 53

    (36) words -> words WORD .
    (37) words -> words WORD . sinais
    (41) sinais -> . EXCLAMATION
    (42) sinais -> . INTERROGATION

    QUOTE           reduce using rule 36 (words -> words WORD .)
    WORD            reduce using rule 36 (words -> words WORD .)
    EXCLAMATION     shift and go to state 63
    INTERROGATION   shift and go to state 64

    sinais                         shift and go to state 62

state 54

    (24) FUNCTION_DEFINITION -> COLON WORD LPAREN FUNCTION_PARAMS RPAREN . FUNCTION_BODY SEMICOLON
    (30) FUNCTION_BODY -> . instructions
    (31) FUNCTION_BODY -> . instruction
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (4) instructions -> . instructions instruction WORD
    (5) instructions -> . instructions instruction WORD instruction
    (6) instructions -> . FUNCTION_DEFINITION
    (39) instructions -> . FUNCCALL
    (7) instruction -> . instructions WORD instructions
    (9) instruction -> . NUMBER
    (10) instruction -> . operator
    (11) instruction -> . CARACTER
    (19) instruction -> . PRINT
    (8) FUNCTION_DEFINITION -> . CONDICIONAL
    (24) FUNCTION_DEFINITION -> . COLON WORD LPAREN FUNCTION_PARAMS RPAREN FUNCTION_BODY SEMICOLON
    (32) FUNCTION_DEFINITION -> . COLON WORD PRINTFUNC SEMICOLON
    (43) FUNCTION_DEFINITION -> . COLON funcword SEMICOLON
    (40) FUNCCALL -> . WORD
    (12) operator -> . PLUS
    (13) operator -> . MINUS
    (14) operator -> . TIMES
    (15) operator -> . DIVIDE
    (16) operator -> . SUP
    (17) operator -> . INF
    (18) operator -> . EQUALS
    (45) CARACTER -> . CR
    (46) CARACTER -> . KEY
    (20) PRINT -> . DOT
    (21) PRINT -> . NUMBER DOT
    (22) PRINT -> . DOT QUOTE words QUOTE
    (23) PRINT -> . NUMBER EMIT
    (47) CONDICIONAL -> . COLON WORD operator IF part ELSE part THEN SEMICOLON

    NUMBER          shift and go to state 7
    COLON           shift and go to state 12
    WORD            shift and go to state 4
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    TIMES           shift and go to state 15
    DIVIDE          shift and go to state 16
    SUP             shift and go to state 17
    INF             shift and go to state 18
    EQUALS          shift and go to state 19
    CR              shift and go to state 20
    KEY             shift and go to state 21
    DOT             shift and go to state 22

    FUNCTION_BODY                  shift and go to state 65
    instructions                   shift and go to state 66
    instruction                    shift and go to state 67
    FUNCTION_DEFINITION            shift and go to state 5
    FUNCCALL                       shift and go to state 6
    operator                       shift and go to state 8
    CARACTER                       shift and go to state 9
    PRINT                          shift and go to state 10
    CONDICIONAL                    shift and go to state 11

state 55

    (25) FUNCTION_PARAMS -> PARAMS FUNCTION_PARAMS .

    RPAREN          reduce using rule 25 (FUNCTION_PARAMS -> PARAMS FUNCTION_PARAMS .)


state 56

    (26) FUNCTION_PARAMS -> PARAMS MIDFUNC . WORD
    (28) PARAMS -> MIDFUNC .

  ! shift/reduce conflict for WORD resolved as shift
    WORD            shift and go to state 68
    MIDFUNC         reduce using rule 28 (PARAMS -> MIDFUNC .)
    ID              reduce using rule 28 (PARAMS -> MIDFUNC .)

  ! WORD            [ reduce using rule 28 (PARAMS -> MIDFUNC .) ]


state 57

    (47) CONDICIONAL -> COLON WORD operator IF part . ELSE part THEN SEMICOLON

    ELSE            shift and go to state 69


state 58

    (48) part -> DOT . QUOTE words QUOTE

    QUOTE           shift and go to state 70


state 59

    (49) part -> QUOTE . words QUOTE
    (36) words -> . words WORD
    (37) words -> . words WORD sinais
    (38) words -> . WORD

    WORD            shift and go to state 41

    words                          shift and go to state 71

state 60

    (33) PRINTFUNC -> DOT QUOTE words . QUOTE
    (34) PRINTFUNC -> DOT QUOTE words . QUOTE CARACTER
    (36) words -> words . WORD
    (37) words -> words . WORD sinais

    QUOTE           shift and go to state 72
    WORD            shift and go to state 53


state 61

    (35) PRINTFUNC -> QUOTE words QUOTE .

    SEMICOLON       reduce using rule 35 (PRINTFUNC -> QUOTE words QUOTE .)


state 62

    (37) words -> words WORD sinais .

    QUOTE           reduce using rule 37 (words -> words WORD sinais .)
    WORD            reduce using rule 37 (words -> words WORD sinais .)


state 63

    (41) sinais -> EXCLAMATION .

    QUOTE           reduce using rule 41 (sinais -> EXCLAMATION .)
    WORD            reduce using rule 41 (sinais -> EXCLAMATION .)


state 64

    (42) sinais -> INTERROGATION .

    QUOTE           reduce using rule 42 (sinais -> INTERROGATION .)
    WORD            reduce using rule 42 (sinais -> INTERROGATION .)


state 65

    (24) FUNCTION_DEFINITION -> COLON WORD LPAREN FUNCTION_PARAMS RPAREN FUNCTION_BODY . SEMICOLON

    SEMICOLON       shift and go to state 73


state 66

    (30) FUNCTION_BODY -> instructions .
    (2) instructions -> instructions . instruction
    (4) instructions -> instructions . instruction WORD
    (5) instructions -> instructions . instruction WORD instruction
    (7) instruction -> instructions . WORD instructions
    (7) instruction -> . instructions WORD instructions
    (9) instruction -> . NUMBER
    (10) instruction -> . operator
    (11) instruction -> . CARACTER
    (19) instruction -> . PRINT
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (4) instructions -> . instructions instruction WORD
    (5) instructions -> . instructions instruction WORD instruction
    (6) instructions -> . FUNCTION_DEFINITION
    (39) instructions -> . FUNCCALL
    (12) operator -> . PLUS
    (13) operator -> . MINUS
    (14) operator -> . TIMES
    (15) operator -> . DIVIDE
    (16) operator -> . SUP
    (17) operator -> . INF
    (18) operator -> . EQUALS
    (45) CARACTER -> . CR
    (46) CARACTER -> . KEY
    (20) PRINT -> . DOT
    (21) PRINT -> . NUMBER DOT
    (22) PRINT -> . DOT QUOTE words QUOTE
    (23) PRINT -> . NUMBER EMIT
    (8) FUNCTION_DEFINITION -> . CONDICIONAL
    (24) FUNCTION_DEFINITION -> . COLON WORD LPAREN FUNCTION_PARAMS RPAREN FUNCTION_BODY SEMICOLON
    (32) FUNCTION_DEFINITION -> . COLON WORD PRINTFUNC SEMICOLON
    (43) FUNCTION_DEFINITION -> . COLON funcword SEMICOLON
    (40) FUNCCALL -> . WORD
    (47) CONDICIONAL -> . COLON WORD operator IF part ELSE part THEN SEMICOLON

    SEMICOLON       reduce using rule 30 (FUNCTION_BODY -> instructions .)
    WORD            shift and go to state 25
    NUMBER          shift and go to state 7
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    TIMES           shift and go to state 15
    DIVIDE          shift and go to state 16
    SUP             shift and go to state 17
    INF             shift and go to state 18
    EQUALS          shift and go to state 19
    CR              shift and go to state 20
    KEY             shift and go to state 21
    DOT             shift and go to state 22
    COLON           shift and go to state 12

    instructions                   shift and go to state 23
    instruction                    shift and go to state 24
    operator                       shift and go to state 8
    CARACTER                       shift and go to state 9
    PRINT                          shift and go to state 10
    FUNCTION_DEFINITION            shift and go to state 5
    FUNCCALL                       shift and go to state 6
    CONDICIONAL                    shift and go to state 11

state 67

    (31) FUNCTION_BODY -> instruction .
    (3) instructions -> instruction .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 3 (instructions -> instruction .)
    WORD            reduce using rule 3 (instructions -> instruction .)
    NUMBER          reduce using rule 3 (instructions -> instruction .)
    PLUS            reduce using rule 3 (instructions -> instruction .)
    MINUS           reduce using rule 3 (instructions -> instruction .)
    TIMES           reduce using rule 3 (instructions -> instruction .)
    DIVIDE          reduce using rule 3 (instructions -> instruction .)
    SUP             reduce using rule 3 (instructions -> instruction .)
    INF             reduce using rule 3 (instructions -> instruction .)
    EQUALS          reduce using rule 3 (instructions -> instruction .)
    CR              reduce using rule 3 (instructions -> instruction .)
    KEY             reduce using rule 3 (instructions -> instruction .)
    DOT             reduce using rule 3 (instructions -> instruction .)
    COLON           reduce using rule 3 (instructions -> instruction .)
    SEMICOLON       reduce using rule 3 (instructions -> instruction .)

  ! SEMICOLON       [ reduce using rule 31 (FUNCTION_BODY -> instruction .) ]


state 68

    (26) FUNCTION_PARAMS -> PARAMS MIDFUNC WORD .

    RPAREN          reduce using rule 26 (FUNCTION_PARAMS -> PARAMS MIDFUNC WORD .)


state 69

    (47) CONDICIONAL -> COLON WORD operator IF part ELSE . part THEN SEMICOLON
    (48) part -> . DOT QUOTE words QUOTE
    (49) part -> . QUOTE words QUOTE

    DOT             shift and go to state 58
    QUOTE           shift and go to state 59

    part                           shift and go to state 74

state 70

    (48) part -> DOT QUOTE . words QUOTE
    (36) words -> . words WORD
    (37) words -> . words WORD sinais
    (38) words -> . WORD

    WORD            shift and go to state 41

    words                          shift and go to state 75

state 71

    (49) part -> QUOTE words . QUOTE
    (36) words -> words . WORD
    (37) words -> words . WORD sinais

    QUOTE           shift and go to state 76
    WORD            shift and go to state 53


state 72

    (33) PRINTFUNC -> DOT QUOTE words QUOTE .
    (34) PRINTFUNC -> DOT QUOTE words QUOTE . CARACTER
    (45) CARACTER -> . CR
    (46) CARACTER -> . KEY

    SEMICOLON       reduce using rule 33 (PRINTFUNC -> DOT QUOTE words QUOTE .)
    CR              shift and go to state 20
    KEY             shift and go to state 21

    CARACTER                       shift and go to state 77

state 73

    (24) FUNCTION_DEFINITION -> COLON WORD LPAREN FUNCTION_PARAMS RPAREN FUNCTION_BODY SEMICOLON .

    WORD            reduce using rule 24 (FUNCTION_DEFINITION -> COLON WORD LPAREN FUNCTION_PARAMS RPAREN FUNCTION_BODY SEMICOLON .)
    NUMBER          reduce using rule 24 (FUNCTION_DEFINITION -> COLON WORD LPAREN FUNCTION_PARAMS RPAREN FUNCTION_BODY SEMICOLON .)
    PLUS            reduce using rule 24 (FUNCTION_DEFINITION -> COLON WORD LPAREN FUNCTION_PARAMS RPAREN FUNCTION_BODY SEMICOLON .)
    MINUS           reduce using rule 24 (FUNCTION_DEFINITION -> COLON WORD LPAREN FUNCTION_PARAMS RPAREN FUNCTION_BODY SEMICOLON .)
    TIMES           reduce using rule 24 (FUNCTION_DEFINITION -> COLON WORD LPAREN FUNCTION_PARAMS RPAREN FUNCTION_BODY SEMICOLON .)
    DIVIDE          reduce using rule 24 (FUNCTION_DEFINITION -> COLON WORD LPAREN FUNCTION_PARAMS RPAREN FUNCTION_BODY SEMICOLON .)
    SUP             reduce using rule 24 (FUNCTION_DEFINITION -> COLON WORD LPAREN FUNCTION_PARAMS RPAREN FUNCTION_BODY SEMICOLON .)
    INF             reduce using rule 24 (FUNCTION_DEFINITION -> COLON WORD LPAREN FUNCTION_PARAMS RPAREN FUNCTION_BODY SEMICOLON .)
    EQUALS          reduce using rule 24 (FUNCTION_DEFINITION -> COLON WORD LPAREN FUNCTION_PARAMS RPAREN FUNCTION_BODY SEMICOLON .)
    CR              reduce using rule 24 (FUNCTION_DEFINITION -> COLON WORD LPAREN FUNCTION_PARAMS RPAREN FUNCTION_BODY SEMICOLON .)
    KEY             reduce using rule 24 (FUNCTION_DEFINITION -> COLON WORD LPAREN FUNCTION_PARAMS RPAREN FUNCTION_BODY SEMICOLON .)
    DOT             reduce using rule 24 (FUNCTION_DEFINITION -> COLON WORD LPAREN FUNCTION_PARAMS RPAREN FUNCTION_BODY SEMICOLON .)
    COLON           reduce using rule 24 (FUNCTION_DEFINITION -> COLON WORD LPAREN FUNCTION_PARAMS RPAREN FUNCTION_BODY SEMICOLON .)
    $end            reduce using rule 24 (FUNCTION_DEFINITION -> COLON WORD LPAREN FUNCTION_PARAMS RPAREN FUNCTION_BODY SEMICOLON .)
    SEMICOLON       reduce using rule 24 (FUNCTION_DEFINITION -> COLON WORD LPAREN FUNCTION_PARAMS RPAREN FUNCTION_BODY SEMICOLON .)


state 74

    (47) CONDICIONAL -> COLON WORD operator IF part ELSE part . THEN SEMICOLON

    THEN            shift and go to state 78


state 75

    (48) part -> DOT QUOTE words . QUOTE
    (36) words -> words . WORD
    (37) words -> words . WORD sinais

    QUOTE           shift and go to state 79
    WORD            shift and go to state 53


state 76

    (49) part -> QUOTE words QUOTE .

    ELSE            reduce using rule 49 (part -> QUOTE words QUOTE .)
    THEN            reduce using rule 49 (part -> QUOTE words QUOTE .)


state 77

    (34) PRINTFUNC -> DOT QUOTE words QUOTE CARACTER .

    SEMICOLON       reduce using rule 34 (PRINTFUNC -> DOT QUOTE words QUOTE CARACTER .)


state 78

    (47) CONDICIONAL -> COLON WORD operator IF part ELSE part THEN . SEMICOLON

    SEMICOLON       shift and go to state 80


state 79

    (48) part -> DOT QUOTE words QUOTE .

    ELSE            reduce using rule 48 (part -> DOT QUOTE words QUOTE .)
    THEN            reduce using rule 48 (part -> DOT QUOTE words QUOTE .)


state 80

    (47) CONDICIONAL -> COLON WORD operator IF part ELSE part THEN SEMICOLON .

    WORD            reduce using rule 47 (CONDICIONAL -> COLON WORD operator IF part ELSE part THEN SEMICOLON .)
    NUMBER          reduce using rule 47 (CONDICIONAL -> COLON WORD operator IF part ELSE part THEN SEMICOLON .)
    PLUS            reduce using rule 47 (CONDICIONAL -> COLON WORD operator IF part ELSE part THEN SEMICOLON .)
    MINUS           reduce using rule 47 (CONDICIONAL -> COLON WORD operator IF part ELSE part THEN SEMICOLON .)
    TIMES           reduce using rule 47 (CONDICIONAL -> COLON WORD operator IF part ELSE part THEN SEMICOLON .)
    DIVIDE          reduce using rule 47 (CONDICIONAL -> COLON WORD operator IF part ELSE part THEN SEMICOLON .)
    SUP             reduce using rule 47 (CONDICIONAL -> COLON WORD operator IF part ELSE part THEN SEMICOLON .)
    INF             reduce using rule 47 (CONDICIONAL -> COLON WORD operator IF part ELSE part THEN SEMICOLON .)
    EQUALS          reduce using rule 47 (CONDICIONAL -> COLON WORD operator IF part ELSE part THEN SEMICOLON .)
    CR              reduce using rule 47 (CONDICIONAL -> COLON WORD operator IF part ELSE part THEN SEMICOLON .)
    KEY             reduce using rule 47 (CONDICIONAL -> COLON WORD operator IF part ELSE part THEN SEMICOLON .)
    DOT             reduce using rule 47 (CONDICIONAL -> COLON WORD operator IF part ELSE part THEN SEMICOLON .)
    COLON           reduce using rule 47 (CONDICIONAL -> COLON WORD operator IF part ELSE part THEN SEMICOLON .)
    $end            reduce using rule 47 (CONDICIONAL -> COLON WORD operator IF part ELSE part THEN SEMICOLON .)
    SEMICOLON       reduce using rule 47 (CONDICIONAL -> COLON WORD operator IF part ELSE part THEN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DOT in state 7 resolved as shift
WARNING: shift/reduce conflict for WORD in state 24 resolved as shift
WARNING: shift/reduce conflict for WORD in state 24 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 25 resolved as shift
WARNING: shift/reduce conflict for COLON in state 25 resolved as shift
WARNING: shift/reduce conflict for WORD in state 25 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 25 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 25 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 25 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 25 resolved as shift
WARNING: shift/reduce conflict for SUP in state 25 resolved as shift
WARNING: shift/reduce conflict for INF in state 25 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 25 resolved as shift
WARNING: shift/reduce conflict for CR in state 25 resolved as shift
WARNING: shift/reduce conflict for KEY in state 25 resolved as shift
WARNING: shift/reduce conflict for DOT in state 25 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 31 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 31 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 31 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 31 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 31 resolved as shift
WARNING: shift/reduce conflict for SUP in state 31 resolved as shift
WARNING: shift/reduce conflict for INF in state 31 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 31 resolved as shift
WARNING: shift/reduce conflict for CR in state 31 resolved as shift
WARNING: shift/reduce conflict for KEY in state 31 resolved as shift
WARNING: shift/reduce conflict for DOT in state 31 resolved as shift
WARNING: shift/reduce conflict for COLON in state 31 resolved as shift
WARNING: shift/reduce conflict for WORD in state 31 resolved as shift
WARNING: shift/reduce conflict for WORD in state 32 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 32 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 32 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 32 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 32 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 32 resolved as shift
WARNING: shift/reduce conflict for SUP in state 32 resolved as shift
WARNING: shift/reduce conflict for INF in state 32 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 32 resolved as shift
WARNING: shift/reduce conflict for CR in state 32 resolved as shift
WARNING: shift/reduce conflict for KEY in state 32 resolved as shift
WARNING: shift/reduce conflict for DOT in state 32 resolved as shift
WARNING: shift/reduce conflict for COLON in state 32 resolved as shift
WARNING: shift/reduce conflict for WORD in state 56 resolved as shift
WARNING: reduce/reduce conflict in state 24 resolved using rule (instructions -> instructions instruction)
WARNING: rejected rule (instructions -> instruction) in state 24
WARNING: reduce/reduce conflict in state 42 resolved using rule (instructions -> instruction)
WARNING: rejected rule (instructions -> instructions instruction WORD instruction) in state 42
WARNING: reduce/reduce conflict in state 67 resolved using rule (instructions -> instruction)
WARNING: rejected rule (FUNCTION_BODY -> instruction) in state 67
WARNING: Rule (FUNCTION_BODY -> instruction) is never reduced
